{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9956150D4065892cC28b34C588Cb08e9eD01a2C9",
    "txHash": "0x852e2b2573c64dbc97554888ccb74c9c65dff123f565f6f2083c2adf8b682b9c"
  },
  "proxies": [
    {
      "address": "0x3a670E5C55D79827F90aD3ab5bd8562f9474eA9a",
      "txHash": "0x3acd618ccafe58cdf70cde9bfbe41ce407faccb7d3e2486d15198d1e1f7dca30",
      "kind": "transparent"
    },
    {
      "address": "0xce11c8106f4755B9c55643Db0d72e33329802519",
      "txHash": "0x037bb3ff95bb769cf90a93420ed43cea9217baf5dc035605fcf5fb54035c1f67",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0d0741bdeda2d5d8db33f515348e2fb8b50ec0f0ad761724bb7f9f6cdf550ea4": {
      "address": "0xe804F8adCD010Daa3452aFdc79a499F4d6FD70F0",
      "txHash": "0xe710db031796bbda5ff6cf5c98af02345bf7ccf64f45ee5bcea947588cead7e6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1717",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:32"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:33"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:35"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:37"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:39"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:41"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:43"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:45"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:47"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(Oracle)4374",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:49"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:51"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:53"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:55"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:57"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:59"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:61"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:63"
          },
          {
            "label": "MAX_TOTAL_SUPPLY",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:65"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:67"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_address,t_struct(Basics)8129_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:69"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:71"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_address,t_struct(Basics)8129_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:73"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)8136_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1717": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(Oracle)4374": {
            "label": "contract Oracle",
            "numberOfBytes": "20"
          },
          "t_enum(Status)8119": {
            "label": "enum Helpers.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)8129_storage)": {
            "label": "mapping(address => struct Helpers.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)8136_storage)": {
            "label": "mapping(uint256 => struct Helpers.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)8129_storage": {
            "label": "struct Helpers.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)8119",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)8136_storage": {
            "label": "struct Helpers.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b8d29c46527f6459d6ecd2b97f468688eacc43bf1238cd4e13e01158a7bcd53": {
      "address": "0x0F09d833Ea5F60160E7Afc4f3c624edA6a5843BB",
      "txHash": "0x3af45fe23f6e8476c704af5ea4051c402f3e7cc93b4a6a4191b5ea301b604fc0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1717",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:32"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:33"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:35"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:37"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:39"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:41"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:43"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:45"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:47"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(Oracle)4374",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:49"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:51"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:53"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:55"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:57"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:59"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:61"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:63"
          },
          {
            "label": "MAX_TOTAL_SUPPLY",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:65"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "368",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:67"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_address,t_struct(Basics)8129_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:69"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:71"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_address,t_struct(Basics)8129_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:73"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)8136_storage)",
            "contract": "CalculumVault",
            "src": "contracts/CalculumVault.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1717": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(Oracle)4374": {
            "label": "contract Oracle",
            "numberOfBytes": "20"
          },
          "t_enum(Status)8119": {
            "label": "enum Helpers.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)8129_storage)": {
            "label": "mapping(address => struct Helpers.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)8136_storage)": {
            "label": "mapping(uint256 => struct Helpers.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)8129_storage": {
            "label": "struct Helpers.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)8119",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)8136_storage": {
            "label": "struct Helpers.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
