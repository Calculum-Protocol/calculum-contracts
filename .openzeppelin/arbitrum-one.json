{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xDbADB3BF9FcdaD66273C53cC103e112f6ca05358",
      "txHash": "0xb3c547830b8e19940c6fd882d53f66e0abdf21804f66c41bfebca88e36f80583",
      "kind": "transparent"
    },
    {
      "address": "0x03c429Dd07dF92529AFb9191e489644121974280",
      "txHash": "0x3930cd7f9ed9b68f6cac76836ddd0fa0cc0acd550cd3946bd86eadefbf3d0a7d",
      "kind": "transparent"
    },
    {
      "address": "0x0bdeEE79B408E737B7D85638A9Ef47eDF30c7194",
      "txHash": "0x82566c2c5ca0190267d99c7a713249b59da202efb96f6abc1eba8bcce74780ef",
      "kind": "transparent"
    },
    {
      "address": "0x44F1Bf48B01DF1220c8f6b5E515F0c16e4542637",
      "txHash": "0x70544ee9215155a6eadc81b8487674ccc8132414bc856a6b103383415956dfd5",
      "kind": "transparent"
    },
    {
      "address": "0xA7FBF9B91931AD595E2cD07C1Fb4B088E660c258",
      "txHash": "0x7f1a4795dc0a4e3bce389cba94e967d84a9a75102060602d9b7c7c987b845319",
      "kind": "transparent"
    },
    {
      "address": "0x4136de85bb20B5172DC0e9799cb44d95fbD77bd6",
      "txHash": "0x9e400f8ecadc9cef8398592e06c1d58960ae764140c13dcbdfeaa75519107ba3",
      "kind": "transparent"
    },
    {
      "address": "0x6D8474f246fBEe7fA870C6F2993d0e85C4A02A1E",
      "txHash": "0x1cbabda602b362670d173c57b4aa2307258db39878de279244b01964df07f419",
      "kind": "transparent"
    },
    {
      "address": "0x31758eD7da38A069712d80230aE03d7c9dC01e89",
      "txHash": "0xb12c6b2edbbd580e8686222aeb223573d499739c4f1f4a2daad2520a8204427b",
      "kind": "transparent"
    },
    {
      "address": "0x9379B2a449c457050432E4f137c26A96CE05B9F3",
      "txHash": "0xf6792fff67e7828923cb50cc75ebb2b99e4bb0dcc5e783b0717cf6d1518f11b3",
      "kind": "transparent"
    },
    {
      "address": "0x8Fc20FaCFEA1BE4Dbe44FbEde02F5C1988de9d45",
      "txHash": "0xd4b9ff7f06fe2d05494561b3274938e49a8caff8c95c55d46bb78f57e2ba6b82",
      "kind": "transparent"
    },
    {
      "address": "0xb630a21664D45D1b2bd0BF0B18B82eaB5BFbAf3B",
      "txHash": "0x0800c69720e070906e1e2172b701bb3afb0bc646aef51fce949af4550ef225ab",
      "kind": "transparent"
    },
    {
      "address": "0xDF4583F070EE1766c58768E4d94bc23781bB90E1",
      "txHash": "0x313308273bdd7fbafa8bb26450347b4daf15f51fd88e5f1578573f3efe884fa4",
      "kind": "transparent"
    },
    {
      "address": "0xDAd5479d17e21f8246AED2A284b9E307a55C5fE3",
      "txHash": "0xc7112d67e364f374bda72ec8c2b8692c824023f2adf0fdedbf8a6418bb134b46",
      "kind": "transparent"
    },
    {
      "address": "0x366f52ff99B5AA7c511b13a795790C651bFc9e59",
      "txHash": "0xa27010d24694c409d9107ff80d94059933882a95a320c7ffdf6d8798aa922b33",
      "kind": "transparent"
    },
    {
      "address": "0x3e91bfb58A9FD0B9040633F8b286EEF52364D996",
      "txHash": "0x2e7533fb96f59a686f120a95c2692f0335d7517ae0c28a36c2bfe3dd2096a2d7",
      "kind": "transparent"
    },
    {
      "address": "0x3D3Da8F6D0f171a953b4ca7FeF98E57CDc7184F7",
      "txHash": "0x415c338f5f8d86b8b93a960e0a7f11f80cccb7214f1141c4e563ae7305773ef4",
      "kind": "transparent"
    },
    {
      "address": "0x9D9E142caC184F59ca5f5735522Ee97e6373B6F7",
      "txHash": "0x5aee1b188cc8a77116245c6368803d59c48ce09f73c14a370ce9a86d0081e325",
      "kind": "transparent"
    },
    {
      "address": "0x1c2DF1a3ef2065957B81C74889b2e970ab0E0Cc0",
      "txHash": "0x07d50285fb5c28063184cc71e4b09c2429cd5c56aa70fc4e1c4baec6051fdc16",
      "kind": "transparent"
    },
    {
      "address": "0xc1613e2095717A1b959eB68f15BcA66641767EEe",
      "txHash": "0xadc5da6a410752850cedbe859ff2084520d789f0b56cc323d4304074c8492c53",
      "kind": "transparent"
    },
    {
      "address": "0xEcb1B3676a929f46C723Ac76A7e17c472338e76C",
      "txHash": "0x8f6a7c082943b3254fe4883ff06eabc2fce58ca59aa085350bfb7cb979cf7b70",
      "kind": "transparent"
    }
  ],
  "impls": {
    "609a3b1cd1823ca45f99f57e703ff4bae9a709f5d32f3fa58cbe9f353133612f": {
      "address": "0x5A6D51967DB705FcD947ddaeFe140026c8DB7FD6",
      "txHash": "0xc75f1b34c15685093d48e59ecdbdac224ed95c3d2e4a40df2efc4a0e2d882467",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)16756",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)15210_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)15210_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)15218_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)16756": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)15199": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)15210_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)15218_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)15210_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)15199",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)15218_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4b051f7051c6a14f39e3583aff6e94a240c4e879d02bb5042bfdc010499b322e": {
      "address": "0x35086a229166d8A54Bb61EA4301005fa85Cc9fD2",
      "txHash": "0xe898cf70be4b5d6bccd4e4fe2497a1357a7f270921c1a7726b06f79e5e916a94",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)16756",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)15210_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)15210_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)15218_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)16756": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)15199": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)15210_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)15218_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)15210_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)15199",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)15218_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b3662c39d9af66ffe59e6b72ac5f1471c0756f687664e22d4fca38c3c8de2412": {
      "address": "0x7984d027EC8aF613fdAAb86adE8c999Da30a193E",
      "txHash": "0x9f01315c85a0f0c50bee4a7ecd22b5358998f274e1aa643f6cb571eeb4422033",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)18144",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)16062_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)16062_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)16070_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)18144": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)16051": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)16062_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)16070_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)16062_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)16051",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)16070_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "692189de11a2ad7a009d7c234abc7ea056227cfcf1884e98c769fcacdf76f36e": {
      "address": "0x5810e16D7B0220e012e87BD826c8fFC54647664a",
      "txHash": "0x0246681d34a5787a7e36326c703263bd73bd0d969eec9cd74c65de40c419892f",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)16764",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)15218_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)15218_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)15226_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)16764": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)15207": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)15218_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)15226_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)15218_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)15207",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)15226_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ea09b6522460429a935ba5cadf922853bf94cf75cdabb05185e2bba866f100bf": {
      "address": "0xCf92073b399b6bB6245d68AD1AA9a0B948b52874",
      "txHash": "0xf4df874011ccb25b2c4981c98040382e91f3485e9cdab98b15b80e4a13ecbce8",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)16763",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)15217_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)15217_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)15225_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)16763": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)15206": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)15217_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)15225_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)15217_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)15206",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)15225_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "eb08679758fc73358c1b0a293d4f2304eb6687243ee25206777b68a31dff0fa9": {
      "address": "0x3F4a5377ea4f822A6989438C9C281195e81d49bb",
      "txHash": "0xa4d5d3f950d6f45e1f14a381d2e621aefd3b2af9831b707a09a95667e38892a3",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)16761",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "375",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_address,t_struct(Basics)15215_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)15215_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)15223_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)16761": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)15204": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)15215_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8098_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)15223_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)15215_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)15204",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)15223_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)8098_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "91af66c6bd8a4241ecb630823f8943edf803d0b10144ae432bd2da01d1b1f52f": {
      "address": "0xBd5FfB80E27A9D597E5Def3829dE6762b9e18b97",
      "txHash": "0x1d4ef4740c816b1c5df9d6af845d3642c1930de4cab81abe0a9e1650c2f0d4b4",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f96caa5a8bf3e4889a7e2ac89e65a7d8f213245e511a3823fb84a603176721b3": {
      "address": "0x6a4684f30d223Ad0FE3eBceb2358005538147139",
      "txHash": "0xd4d9f0ec92c5a73db8d86f5769827992334b69fa9d3e15c10590346badeca7fd",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4e122ed28be850b9bf6d6256f82f856827d8c706d2ffe8346efbda3585c16763": {
      "address": "0xB9028d12a8471D5FF252CDD95af39f394feA8926",
      "txHash": "0x2bc8aa378cd6c95c6da27ac9c970abf821cd2e840e811d468c38bb83750776f8",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3342bb36dfd83225382f6f0db8f1d47c61695addeba2818ceb6c537fa05ecfa9": {
      "address": "0xe3f2AA371577C3a72D3909B36d2A48Fcc4B0e396",
      "txHash": "0x353a040249863cfdd0b6883d68d2f9d5679c0eca0e23d1053378a5411b9ec5b1",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d25fc5e93d96cd855f73d3060459f38cc65cced2c9d3e5ab3aaa9e72d76a9496": {
      "address": "0x15aA352118610B6ABBD53aC5c481B70bD8a62123",
      "txHash": "0x3f969fb9b9b5b8c76751975e4bc332acc199b05f7706689f7790a02cbc02ba01",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)1337",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)1337": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "81dbbd0f3957cc6cfaaf83a030a7249b75c7cda3e1a7a39c8dccf2123b8e5410": {
      "address": "0x2187d31DC55d73C0CB3B4301CfeD42453f9f56fA",
      "txHash": "0x20e109b3643704c799739235c7b91ae09bed988f5f87a287b9c09804a7d08426",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66950633216df493d31bc529e1044187b02277c0ef89069a01802b80d7a4b404": {
      "address": "0x4F1d17Db9F82E2654Cf8d836835b5CFc8a249954",
      "txHash": "0xea2fc37d8ee97a6dfada71c4237376fbe8ff973c805d950859eb1c8bc5fb37cb",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "90a44a0b83a181e186f63c789bec4b800cc5aeab519e2a0623c2bdaa11b5448d": {
      "address": "0xe4C8Fd18dCc1AbDBd73e5A33A83253Cb3A335F0a",
      "txHash": "0xae6ca59f598d7196e02779948b1017a4ca47baed44130148c778ba0e6c6e58fd",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5112a055fdd1a7a8e6445d8e4268e5689bb9b71c85ee81df8f210c9b21b21617": {
      "address": "0xd1d5893b9558bA955D4409c3cD6d0b3A8a1ec551",
      "txHash": "0x01376e3c0c1ead81eb2f9c33649c452b849d630e2f3cfebc226091c2c6e60539",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e973777ba593aa0c48716e3f99dfef162634ef9918c2aed4fdcba55c314dea7d": {
      "address": "0xcB5B2F87709FE3F99CC9A8761852e9c07bc1A655",
      "txHash": "0x09f2a3ab49597d13b7523884c2ec8cbe129144c544ed00e76e8773af6cc7f503",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "167ca455f06f79620fb4a0df6063013f870eb58c9f5442401d54c5a714bea734": {
      "address": "0xa87CA8b03efdc2b6d39472000313Fb8fe0E7Bd69",
      "txHash": "0xd37b948f485c10e2961e15c92e2682af313f5b886016b7113ec22f7bb71d80a7",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)9810",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)9810": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6b64aca39d6ca4e9538036f7a483ea8df4a1a9f8d54c8ae38cfdbdf98b4afb91": {
      "address": "0x03BD45E46420d31833Cea2390bAd801a103d91d1",
      "txHash": "0xe41fd44a934f4468442e80e8669fcaaf36f7896352e38eb4cc4eb3f3d0f0700c",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)13070",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "376",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)10896_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_struct(Basics)10896_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10904_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "382",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13070": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10885": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10896_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10904_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10896_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10885",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10904_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3c3d840a0159a00821d3609bbe39c45f11b4c00e3b2580b3346165ffc36a6ee7": {
      "address": "0x076caE29F5a39c40A592931F7F63fAB550A3A1A5",
      "txHash": "0x5814e5bf60b73eab7d52e6a14d2fa607142bd100f004ec58651ccbe28e12d64c",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)13070",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "376",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)10896_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_struct(Basics)10896_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10904_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "382",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13070": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10885": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10896_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10904_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10896_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10885",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10904_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "81d294fda46adcf29a29165d090bf3fe5566f5731ce1a057f03b077226324e9b": {
      "address": "0x1645E90912ad7DF4BE52A602EB7e50Ea84C73C0D",
      "txHash": "0x6cc1641a8b6abf5b2eb4cff5c302e5db8cf26958154847876d29510de1b3c66e",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IRouter)13084",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "376",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)10910_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_struct(Basics)10910_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10918_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "382",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13084": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10899": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10910_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10918_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10910_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10899",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10918_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "89c3966a317a1139d92dfc9cb8fd72b0b31c6cf0842f62e590128ede136eac5b": {
      "address": "0xb979fD3B4A2C9A75D114046946C5A7EbB6114632",
      "txHash": "0xc2ba32fee482e1a39bfa838254f9d39687ec7436e5fbd9c8b296079bfbcc3abd",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)9387",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7749_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7749_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7757_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9387": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7738": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7749_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7757_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7749_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7738",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7757_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d689e92f2ee784202394b388b4850139168a485eb0d65b5d68aa25ba53a24b53": {
      "address": "0xff7372b870F84739E126BBa78c5Ab0F72390D784",
      "txHash": "0x6bf9a553b02f8b70a6eef15c433b014327ea199736e3ed287c1f726d0ff7abf0",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)9353",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7715_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7715_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7723_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9353": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7704": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7715_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7723_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7715_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7704",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7723_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "554822fed93ad1675796aa2be1dcf44c8cb6db961949569ba42bd60672a9c42b": {
      "address": "0x6A3b0E7d3D78f1C7A520f6d07dD33081A094a759",
      "txHash": "0x6efaad5044475c1a37a71dc6b14e621f836eb75edded75654ae61e545b5c8aa7",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)8953",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7315_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7315_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7323_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)8953": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7304": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7315_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7323_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7315_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7304",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7323_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fa4cd7e8fa085f8316b2b211720bb3400a24e9c691387a1a3ec3ee6556da87dd": {
      "address": "0xb9D6cEaD4a787eF764e6C41f6c80a08a5F16B76B",
      "txHash": "0x732af578d65d9bec943b3e8ae894e7b2bdc2783e265713a20ea6550fcea9dbda",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)8950",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7312_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7312_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7320_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)8950": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7301": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7312_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7320_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7312_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7301",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7320_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "444d9919e61caef6704dc7d4b9b835a36855ea55ca80d143609c6a6178864738": {
      "address": "0xD2b6757ee53f72055e263D32B7B5384Cb25c9897",
      "txHash": "0x316d55c3a4d2660100266b0a8567be589cdab7af9fdbee493cf47b17453bd0f8",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)13047",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)10873_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)10873_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10881_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13047": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10862": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10873_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10881_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10873_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10862",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10881_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "817f26c13a29fb258b8da4b4552d67e02fc04047071be7ca9b8cf6b118596ec9": {
      "address": "0xFe545d74954D54c4dE935FFB5f0cBB8b46779Df6",
      "txHash": "0x44acc6e1371706b6b3c67d9c94da18d5461f4f65ee4e644fdef4fee5687fff1a",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)9351",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7713_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7713_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7721_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9351": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7702": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7713_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7721_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7713_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7702",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7721_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bf427c9129fdbbd3dcfa4703bfc7d4b33562321734de7f056d079b15a37a3f8b": {
      "address": "0xFCfF6168E61990E790861B8bf50eA920e14193dd",
      "txHash": "0x8dbf166e78da6c8ad9d61e30f8c42685e859db1928fe928c86750b489548dae0",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)9350",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7712_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7712_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7720_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9350": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7701": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7712_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7720_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7712_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7701",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7720_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "260f504d6bb720ddafbc34c96385502e5efe8d322894f72d9a7583a868be50f9": {
      "address": "0x3895614eDEEC22942a628d19680Dab66a72B332a",
      "txHash": "0x59a18fdaf7f3fc933ae87413f4584a8deb8a1e741dffa91ccc618659d9b2f173",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "_tx",
            "offset": 22,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)13132",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(Oracle)4646",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "376",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "377",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "378",
            "type": "t_mapping(t_address,t_struct(Basics)10958_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "379",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_address,t_struct(Basics)10958_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10966_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "382",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13132": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(Oracle)4646": {
            "label": "contract Oracle",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10947": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10958_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10966_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10958_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10947",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10966_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "de4130594199262550f1d7e988c11e42ccd97f7248b2fcb1df8f81ba6f773387": {
      "address": "0x0aB05a1776c7AABDC2BeEa389cB8C75D94eD83f7",
      "txHash": "0xa78be4ef7ba2799569912ff561ffc28890ed66f981a33bc17146478cddfdf743",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "_tx",
            "offset": 22,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)13107",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)10933_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)10933_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)10941_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)13107": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10922": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)10933_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)10941_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)10933_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)10922",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)10941_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5d2bf530d9e99982739f92e1a421027874fb5d11031628d65470e6b67bd5d1d8": {
      "address": "0xd27977B761e405d34bBDc1bC5A282E601d2F654C",
      "txHash": "0xcec24f6b9c3f88ae7b1573da8535ac9ef4607bae6f408f642ad6e9df8bbdc9d2",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:40"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "_tx",
            "offset": 22,
            "slot": "351",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IRouter)9011",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7373_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7373_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7381_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9011": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7362": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7373_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7381_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7373_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7362",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7381_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d6f4195e5ad936707be7fec8f069b1dc958c4e4b4818ac0cf6d170e2ba08b36f": {
      "address": "0x10156ADCE72738619978B8a3453937701DF32b23",
      "txHash": "0xb9e6068cb8a4652adc856516511484be4e16c8162cb6f2208b567782d2b690ac",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)1337",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)1337": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "879a913028206c4194b07bbae11548d6ac77d7ff2e1fafb97aceb09bbe91e4b5": {
      "address": "0x0bA0D6e7a513BC01EC7c6DD8f6A1F107B223cF85",
      "txHash": "0x19b93cc579d1b5844ea5e165faa48999ce54f84f125b0c9b64bd84606a448a1f",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "aefa808b016d1ab12b055fcbf663f0085caac913c9cccc0d2a7daa0938d0cb19": {
      "address": "0x7aDEe3e9f71daAb47f65A055ddA417E4659fb267",
      "txHash": "0x553ccfbdb450f2852370555ad8895e33fa5c51dc389d22f452d08dba64b198e3",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "spotEngine",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d4479edab87eb19ee0e8e1ba9e63b05b81e341f41e75b629ff179c37d17f0aa2": {
      "address": "0xaD16E79A081e71259a11adAB963FC4e25075CBE8",
      "txHash": "0x6ff7242d4b529ebffacdb2c19b47e6859d9a99d1f5a6c1eb524ed71d567f1620",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:31"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:33"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:35"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "253",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "254",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e3f1c9875231bc1dfe0c2c19c7c05760c5f85c219747edb55687b0fe70421313": {
      "address": "0x64De327BF4e3B41B2810439a4dA935a6946c044f",
      "txHash": "0x7501128fd269a76403c63980b86d567407de101c236c9b380fc634f93eb90112",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2258",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "_tx",
            "offset": 22,
            "slot": "0",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IRouter)9703",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:112"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:114"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:116"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:118"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:120"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:122"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "22",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:124"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:126"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:128"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "25",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:130"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_struct(Basics)8046_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:132"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "27",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:134"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "28",
            "type": "t_mapping(t_address,t_struct(Basics)8046_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:136"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "29",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)8054_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:142"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "30",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:144"
          },
          {
            "label": "limit",
            "offset": 0,
            "slot": "31",
            "type": "t_struct(Limit)8060_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Metadata)2258": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9703": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)8035": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Basics)8046_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)8054_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)8046_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)8035",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Limit)8060_storage": {
            "label": "struct DataTypes.Limit",
            "members": [
              {
                "label": "amountBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NetTransfer)8054_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c17c37d2f560cd5ee7d6f30730fbbe99ed4fdda8fbedc617a9fec79b129da919": {
      "address": "0x6c320A2fCB103511d24424D3CFB0A419aB375EB8",
      "txHash": "0x60d36d727da6a2a8ce72cbd28120c84fba9d07f91e7d90fd97478fe74d626500",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2773",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:53"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)2773": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e6cc6b871849b512263bebd8435131ead51d69fd79f7d110ebdc26f0d6966b94": {
      "address": "0x15c0d586Ed57a783a87eC2aE8dB601522AFd318F",
      "txHash": "0x357c6ae7ffb7378bcb554bd9b116c6d737510d0a0ae8a864f6e8f5992dceb3ed",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2258",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:53"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)2258": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6315cb02fd8eeb7da4a40cc4fc969daf366ab78bb293eac722ba4cbaed76c68": {
      "address": "0xfbf3d8202556966A33fcA70758033A7cbd5A074e",
      "txHash": "0xa20ad82e7e43b7f0f195c268d1c0b4768342c2857087bc370031aa2a4562c1d6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2258",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:53"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)2258": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "37fe55b603838537c5c32bbf3ba9ab1e8050639fc63373b15d7c3466011138fd": {
      "address": "0xEb4958c79359245E1E2102DD3FF6A49028E5be71",
      "txHash": "0xa53876ae68fb179078bafd3ed4d35b529c8ca79dedebe6c0e4a690aa480f3ac5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2258",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:37"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:39"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:41"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:43"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:45"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:47"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:49"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:51"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:53"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockUpVertexInteraction",
            "src": "src/MockUpVertexInteraction.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Metadata)2258": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5d90d5b6a356d55acc7d9878256ac4a30400a1ba94412c0ba898b43b4e36fdee": {
      "address": "0x3cE23cC2AFF872069EfC4Fe2dd838aa5F063A987",
      "txHash": "0x4b584d7dc958a68a2dd405fc9432b8e0e7f3eb4ddc79aff7b95207d9ec2ebc1e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)2258",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "linked",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "_tx",
            "offset": 22,
            "slot": "0",
            "type": "t_bool",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "traderBotWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "endpointVertex",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IRouter)9876",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:100"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:104"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:106"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:108"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:110"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:112"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:114"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:116"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:118"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:120"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:122"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "22",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:124"
          },
          {
            "label": "FLOOR_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:126"
          },
          {
            "label": "DECIMAL_FACTOR",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:128"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "25",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:130"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "26",
            "type": "t_mapping(t_address,t_struct(Basics)8219_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:132"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "27",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:134"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "28",
            "type": "t_mapping(t_address,t_struct(Basics)8219_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:136"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "29",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)8227_storage)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:142"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "30",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:144"
          },
          {
            "label": "limit",
            "offset": 0,
            "slot": "31",
            "type": "t_struct(Limit)8233_storage",
            "contract": "CalculumVault",
            "src": "src/CalculumVault.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)319_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)380_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Metadata)2258": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9876": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_enum(Status)8208": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Basics)8219_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)8227_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)8219_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)8208",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Limit)8233_storage": {
            "label": "struct DataTypes.Limit",
            "members": [
              {
                "label": "amountBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NetTransfer)8227_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
