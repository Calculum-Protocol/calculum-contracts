{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xcCD1820ec24cA756a6A7E66cA417E9Fbf4A41079",
    "txHash": "0xa054fde581f833dab3e7fec5b645de84745fc00cb1a52f2d3cb3d864781ac61f"
  },
  "proxies": [
    {
      "address": "0x798D7b216df6E6E0730C5Da3f69641Df9D6949bF",
      "txHash": "0xfa1d93d29266b8c97dc9d18616939a3144dce1a29ae0fd74897200b61e86470f",
      "kind": "transparent"
    },
    {
      "address": "0x15aA352118610B6ABBD53aC5c481B70bD8a62123",
      "txHash": "0x47620ad8b3988265294b16d19db8849f4ed6528940f0ef19689a9069d51ddb7b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f496c68ce005ac8211a9cef9116377517c152fbc3066263e7b02ad842665a1e1": {
      "address": "0x03c429Dd07dF92529AFb9191e489644121974280",
      "txHash": "0x0fef0ef3260490c36116d3b8668159fff1584488c6ce4ce8af3d622215e627d7",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:41"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "dexWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IRouter)9717",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "kwenta",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IKwenta)9520",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "delegateManager",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IKwenta)9520",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "363",
            "type": "t_contract(Oracle)4647",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)8106_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)8106_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)8113_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IKwenta)9520": {
            "label": "contract IKwenta",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)9717": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(Oracle)4647": {
            "label": "contract Oracle",
            "numberOfBytes": "20"
          },
          "t_enum(Status)8096": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)8106_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)8113_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)8106_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)8096",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)8113_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "48b16d703dc98d3c81c34e21155e254043a49caee2239ad9a998eba4c04fcf53": {
      "address": "0xB52D82F20218332b8476357A20a2AA2dCb7225BC",
      "txHash": "0x38a05033b5deca2d16d31cd090b96bc160a279e99dcb947ec44e14e1dfa61087",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)1746",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:41"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:42"
          },
          {
            "label": "EPOCH_START",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:44"
          },
          {
            "label": "openZeppelinDefenderWallet",
            "offset": 0,
            "slot": "353",
            "type": "t_address_payable",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:46"
          },
          {
            "label": "dexWallet",
            "offset": 0,
            "slot": "354",
            "type": "t_address_payable",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:48"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:50"
          },
          {
            "label": "MANAGEMENT_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:52"
          },
          {
            "label": "PERFORMANCE_FEE_PERCENTAGE",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:54"
          },
          {
            "label": "VAULT_TOKEN_PRICE",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:56"
          },
          {
            "label": "TOTAL_VAULT_TOKEN_SUPPLY",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:58"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IRouter)8336",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:60"
          },
          {
            "label": "kwenta",
            "offset": 0,
            "slot": "361",
            "type": "t_contract(IKwenta)8139",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:62"
          },
          {
            "label": "delegateManager",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(IKwenta)8139",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:64"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "363",
            "type": "t_contract(Oracle)4013",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:66"
          },
          {
            "label": "EPOCH_DURATION",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:68"
          },
          {
            "label": "CURRENT_EPOCH",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:70"
          },
          {
            "label": "MAINTENANCE_PERIOD_PRE_START",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:72"
          },
          {
            "label": "MAINTENANCE_PERIOD_POST_START",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:74"
          },
          {
            "label": "DEX_WALLET_BALANCE",
            "offset": 0,
            "slot": "368",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:76"
          },
          {
            "label": "MAX_DEPOSIT",
            "offset": 0,
            "slot": "369",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:78"
          },
          {
            "label": "MIN_DEPOSIT",
            "offset": 0,
            "slot": "370",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:80"
          },
          {
            "label": "MAX_TOTAL_DEPOSIT",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:82"
          },
          {
            "label": "MIN_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "372",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:84"
          },
          {
            "label": "TARGET_WALLET_BALANCE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:86"
          },
          {
            "label": "MIN_WALLET_BALANCE_ETH_TRANSFER_BOT",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:88"
          },
          {
            "label": "ETH_GAS_RESERVE_USDC_TRANSFER_BOT",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:90"
          },
          {
            "label": "depositWallets",
            "offset": 0,
            "slot": "376",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:92"
          },
          {
            "label": "DEPOSITS",
            "offset": 0,
            "slot": "377",
            "type": "t_mapping(t_address,t_struct(Basics)7261_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:94"
          },
          {
            "label": "withdrawWallets",
            "offset": 0,
            "slot": "378",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:96"
          },
          {
            "label": "WITHDRAWALS",
            "offset": 0,
            "slot": "379",
            "type": "t_mapping(t_address,t_struct(Basics)7261_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:98"
          },
          {
            "label": "netTransfer",
            "offset": 0,
            "slot": "380",
            "type": "t_mapping(t_uint256,t_struct(NetTransfer)7268_storage)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:102"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "381",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "src/CalculumVault.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)1746": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IKwenta)8139": {
            "label": "contract IKwenta",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)8336": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(Oracle)4013": {
            "label": "contract Oracle",
            "numberOfBytes": "20"
          },
          "t_enum(Status)7251": {
            "label": "enum DataTypes.Status",
            "members": [
              "Inactive",
              "Pending",
              "Claimet",
              "Completed",
              "PendingRedeem",
              "PendingWithdraw"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Basics)7261_storage)": {
            "label": "mapping(address => struct DataTypes.Basics)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NetTransfer)7268_storage)": {
            "label": "mapping(uint256 => struct DataTypes.NetTransfer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Basics)7261_storage": {
            "label": "struct DataTypes.Basics",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)7251",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amountAssets",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "finalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NetTransfer)7268_storage": {
            "label": "struct DataTypes.NetTransfer",
            "members": [
              {
                "label": "pending",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "direction",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
